<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.creditmanage.mapper.BasicSituationMapper">
  <resultMap id="BaseResultMap" type="cn.creditmanage.po.BasicSituation">
    <id column="bsid" jdbcType="INTEGER" property="bsid" />
    <result column="bsscore" jdbcType="INTEGER" property="bsscore" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="startschool" jdbcType="VARCHAR" property="startschool" />
    <result column="classmatescore" jdbcType="INTEGER" property="classmatescore" />
    <result column="teacherscore" jdbcType="INTEGER" property="teacherscore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bsid, bsscore, username, school, startschool, classmatescore, teacherscore
  </sql>
  <select id="selectByExample" parameterType="cn.creditmanage.po.BasicSituationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from basic_situation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from basic_situation
    where bsid = #{bsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from basic_situation
    where bsid = #{bsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.creditmanage.po.BasicSituationExample">
    delete from basic_situation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.creditmanage.po.BasicSituation">
    insert into basic_situation (bsid, bsscore, username, 
      school, startschool, classmatescore, 
      teacherscore)
    values (#{bsid,jdbcType=INTEGER}, #{bsscore,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{school,jdbcType=VARCHAR}, #{startschool,jdbcType=VARCHAR}, #{classmatescore,jdbcType=INTEGER}, 
      #{teacherscore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.creditmanage.po.BasicSituation">
    insert into basic_situation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bsid != null">
        bsid,
      </if>
      <if test="bsscore != null">
        bsscore,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="startschool != null">
        startschool,
      </if>
      <if test="classmatescore != null">
        classmatescore,
      </if>
      <if test="teacherscore != null">
        teacherscore,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bsid != null">
        #{bsid,jdbcType=INTEGER},
      </if>
      <if test="bsscore != null">
        #{bsscore,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="startschool != null">
        #{startschool,jdbcType=VARCHAR},
      </if>
      <if test="classmatescore != null">
        #{classmatescore,jdbcType=INTEGER},
      </if>
      <if test="teacherscore != null">
        #{teacherscore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.creditmanage.po.BasicSituationExample" resultType="java.lang.Long">
    select count(*) from basic_situation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update basic_situation
    <set>
      <if test="record.bsid != null">
        bsid = #{record.bsid,jdbcType=INTEGER},
      </if>
      <if test="record.bsscore != null">
        bsscore = #{record.bsscore,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.startschool != null">
        startschool = #{record.startschool,jdbcType=VARCHAR},
      </if>
      <if test="record.classmatescore != null">
        classmatescore = #{record.classmatescore,jdbcType=INTEGER},
      </if>
      <if test="record.teacherscore != null">
        teacherscore = #{record.teacherscore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update basic_situation
    set bsid = #{record.bsid,jdbcType=INTEGER},
      bsscore = #{record.bsscore,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      startschool = #{record.startschool,jdbcType=VARCHAR},
      classmatescore = #{record.classmatescore,jdbcType=INTEGER},
      teacherscore = #{record.teacherscore,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.creditmanage.po.BasicSituation">
    update basic_situation
    <set>
      <if test="bsscore != null">
        bsscore = #{bsscore,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="startschool != null">
        startschool = #{startschool,jdbcType=VARCHAR},
      </if>
      <if test="classmatescore != null">
        classmatescore = #{classmatescore,jdbcType=INTEGER},
      </if>
      <if test="teacherscore != null">
        teacherscore = #{teacherscore,jdbcType=INTEGER},
      </if>
    </set>
    where bsid = #{bsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.creditmanage.po.BasicSituation">
    update basic_situation
    set bsscore = #{bsscore,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      startschool = #{startschool,jdbcType=VARCHAR},
      classmatescore = #{classmatescore,jdbcType=INTEGER},
      teacherscore = #{teacherscore,jdbcType=INTEGER}
    where bsid = #{bsid,jdbcType=INTEGER}
  </update>

  <select id="selectAllBasic" parameterType="pageInfo" resultType="basicSituation">
    select * from basic_situation
    <where>
      <if test="user != null">
        username = #{user}
      </if>
    </where>
    limit #{start},#{size};
  </select>
</mapper>