<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.creditmanage.mapper.ReputationMapper">
  <resultMap id="BaseResultMap" type="cn.creditmanage.po.Reputation">
    <id column="reid" jdbcType="INTEGER" property="reid" />
    <result column="rescore" jdbcType="INTEGER" property="rescore" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="paytuition" jdbcType="VARCHAR" property="paytuition" />
    <result column="nationalloan" jdbcType="VARCHAR" property="nationalloan" />
    <result column="other" jdbcType="VARCHAR" property="other" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reid, rescore, username, paytuition, nationalloan, other
  </sql>
  <select id="selectByExample" parameterType="cn.creditmanage.po.ReputationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reputation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reputation
    where reid = #{reid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reputation
    where reid = #{reid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.creditmanage.po.ReputationExample">
    delete from reputation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.creditmanage.po.Reputation">
    insert into reputation (reid, rescore, username, 
      paytuition, nationalloan, other
      )
    values (#{reid,jdbcType=INTEGER}, #{rescore,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{paytuition,jdbcType=VARCHAR}, #{nationalloan,jdbcType=VARCHAR}, #{other,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.creditmanage.po.Reputation">
    insert into reputation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reid != null">
        reid,
      </if>
      <if test="rescore != null">
        rescore,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="paytuition != null">
        paytuition,
      </if>
      <if test="nationalloan != null">
        nationalloan,
      </if>
      <if test="other != null">
        other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reid != null">
        #{reid,jdbcType=INTEGER},
      </if>
      <if test="rescore != null">
        #{rescore,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="paytuition != null">
        #{paytuition,jdbcType=VARCHAR},
      </if>
      <if test="nationalloan != null">
        #{nationalloan,jdbcType=VARCHAR},
      </if>
      <if test="other != null">
        #{other,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.creditmanage.po.ReputationExample" resultType="java.lang.Long">
    select count(*) from reputation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reputation
    <set>
      <if test="record.reid != null">
        reid = #{record.reid,jdbcType=INTEGER},
      </if>
      <if test="record.rescore != null">
        rescore = #{record.rescore,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.paytuition != null">
        paytuition = #{record.paytuition,jdbcType=VARCHAR},
      </if>
      <if test="record.nationalloan != null">
        nationalloan = #{record.nationalloan,jdbcType=VARCHAR},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reputation
    set reid = #{record.reid,jdbcType=INTEGER},
      rescore = #{record.rescore,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      paytuition = #{record.paytuition,jdbcType=VARCHAR},
      nationalloan = #{record.nationalloan,jdbcType=VARCHAR},
      other = #{record.other,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.creditmanage.po.Reputation">
    update reputation
    <set>
      <if test="rescore != null">
        rescore = #{rescore,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="paytuition != null">
        paytuition = #{paytuition,jdbcType=VARCHAR},
      </if>
      <if test="nationalloan != null">
        nationalloan = #{nationalloan,jdbcType=VARCHAR},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=VARCHAR},
      </if>
    </set>
    where reid = #{reid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.creditmanage.po.Reputation">
    update reputation
    set rescore = #{rescore,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      paytuition = #{paytuition,jdbcType=VARCHAR},
      nationalloan = #{nationalloan,jdbcType=VARCHAR},
      other = #{other,jdbcType=VARCHAR}
    where reid = #{reid,jdbcType=INTEGER}
  </update>

  <select id="selectAllReputation" parameterType="pageInfo" resultType="reputation">
    select * from reputation
    limit #{start},#{size};
  </select>
</mapper>